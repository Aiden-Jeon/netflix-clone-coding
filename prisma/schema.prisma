// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 매번 새로 올리는데 문제가 생길 수 있으니 튜토리얼에서는 db schema 를 먼저 만들어 둔다.
model User {
  id             Int       @id @default(autoincrement()) @map("_id")
  name           String
  image          String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createAt       DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    Int[]
  sessions       Session[]
  accounts       Account[]
}

model Account {
  id                Int     @id @default(autoincrement()) @map("_id")
  userId            Int
  type              String
  provider          String
  // providerAccountId 는 string
  providerAccountId String
  // 구글 토큰 연결 때문에 필요한 부분
  refresh_token     String?
  access_token      String?
  expries_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  // onDelete: 유저가 지워지면 어떻게 할까 ? 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement()) @map("_id")
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         Int      @id @default(autoincrement()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id           Int    @id @default(autoincrement()) @map("_id")
  title        String
  description  String
  videoUrl     String
  thumbnailUrl String
  genre        String
  duration     String
}
